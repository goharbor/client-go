// Code generated by go-swagger; DO NOT EDIT.

package retention

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewTriggerRetentionExecutionParams creates a new TriggerRetentionExecutionParams object
// with the default values initialized.
func NewTriggerRetentionExecutionParams() *TriggerRetentionExecutionParams {
	var ()
	return &TriggerRetentionExecutionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTriggerRetentionExecutionParamsWithTimeout creates a new TriggerRetentionExecutionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTriggerRetentionExecutionParamsWithTimeout(timeout time.Duration) *TriggerRetentionExecutionParams {
	var ()
	return &TriggerRetentionExecutionParams{

		timeout: timeout,
	}
}

// NewTriggerRetentionExecutionParamsWithContext creates a new TriggerRetentionExecutionParams object
// with the default values initialized, and the ability to set a context for a request
func NewTriggerRetentionExecutionParamsWithContext(ctx context.Context) *TriggerRetentionExecutionParams {
	var ()
	return &TriggerRetentionExecutionParams{

		Context: ctx,
	}
}

// NewTriggerRetentionExecutionParamsWithHTTPClient creates a new TriggerRetentionExecutionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTriggerRetentionExecutionParamsWithHTTPClient(client *http.Client) *TriggerRetentionExecutionParams {
	var ()
	return &TriggerRetentionExecutionParams{
		HTTPClient: client,
	}
}

/*TriggerRetentionExecutionParams contains all the parameters to send to the API endpoint
for the trigger retention execution operation typically these are written to a http.Request
*/
type TriggerRetentionExecutionParams struct {

	/*XRequestID
	  An unique ID for the request

	*/
	XRequestID *string
	/*Body*/
	Body TriggerRetentionExecutionBody
	/*ID
	  Retention ID.

	*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) WithTimeout(timeout time.Duration) *TriggerRetentionExecutionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) WithContext(ctx context.Context) *TriggerRetentionExecutionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) WithHTTPClient(client *http.Client) *TriggerRetentionExecutionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXRequestID adds the xRequestID to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) WithXRequestID(xRequestID *string) *TriggerRetentionExecutionParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithBody adds the body to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) WithBody(body TriggerRetentionExecutionBody) *TriggerRetentionExecutionParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) SetBody(body TriggerRetentionExecutionBody) {
	o.Body = body
}

// WithID adds the id to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) WithID(id int64) *TriggerRetentionExecutionParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the trigger retention execution params
func (o *TriggerRetentionExecutionParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *TriggerRetentionExecutionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XRequestID != nil {

		// header param X-Request-Id
		if err := r.SetHeaderParam("X-Request-Id", *o.XRequestID); err != nil {
			return err
		}

	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
